syntax = "proto3";

package server;
option go_package = "proto/server";

service OpenAbyss {
  // Obtains the Stored Key Names
  rpc GetKeyNames(EmptyMessage) returns (GetKeyNamesResponse) {}

  // Obtains Stored Public Keys
  rpc GetKeys(EmptyMessage) returns (GetKeysResponse) {}

  // Generates new Keypair
  rpc GenerateKeyPair(GenerateEntityRequest) returns (Entity) {}

  // Modify/Remove keypair
  rpc ModifyKeyPair(EntityModifyRequest) returns (Entity) {}
  rpc RemoveKeyPair(EntityRemoveRequest) returns (Entity) {}

  // Encrypt/Decrypt File
  rpc EncryptFile(FilePacket) returns (EncryptResult) {}
  rpc DecryptFile(DecryptRequest) returns (FilePacket) {}

  // Import/Export Keys
  rpc ImportKey(KeyImportRequest) returns (KeyImportResponse) {}
  rpc ExportKey(KeyExportRequest) returns (KeyExportResponse) {}
  
  // Internal FileStorage Mods
  rpc ModifyEntity(EntityMod) returns (EmptyMessage) {}
  
  // Lists stored path contents
  rpc ListPathContents(ListPathContentRequest) returns (PathResponse) {}
  rpc ListInternalBackups(EmptyMessage) returns (BackupEntries) {}
  rpc InvokeNewStorageBackup(EmptyMessage) returns (BackupEntry) {}

  // Backup Manager Requests
  rpc GetBackupManagerConfig(EmptyMessage) returns (BackupManagerStatus) {}
  rpc SetBackupManagerConfig(BackupManagerStatus) returns (BackupManagerStatus) {}
  rpc DeleteBackup(BackupEntryRequest) returns (BackupEntry) {}
  rpc ExportBackup(BackupEntryRequest) returns (ExportedBackupResponse) {}
  rpc ImportBackup(ImportBackupRequest) returns (EmptyMessage) {}
  rpc RestoreFromBackup(RestoreFromBackupRequest) returns (BackupEntry) {}

  // Misc
  rpc GetServerVersion(ServerVersionRequest) returns (ServerVersionResponse) {}
}

// ENCRYPT/DECRYPT
message FilePacket {
  bytes       FileBytes = 1;
  int64       SizeInBytes = 2;
  string      FileName = 3;
  FileOptions options = 4;
}

message FileOptions {
  bool    Overwrite = 1;
  string  StoragePath = 2;
  string  KeyName = 3;
}

message DecryptRequest {
  string FilePath = 1;
  bytes PrivateKeyName = 2;
}

message EncryptResult {
  string FileStoragePath = 1;
  string FileId = 2;
}

// MOD
message EntityMod {
  string FilePath = 1;
  bool Remove = 2;
}

// ENTITY
message Entity {
  string  Name = 1;
  string  Description = 2;
  bytes   PublicKeyName = 3;
  string  Algorithm = 4;
  uint64  CreatedUnixTimestamp = 5;
  uint64  ModifiedUnixTimestamp = 6;
  uint64  ExpiresAtUnixTimestamp = 7;
}

message EntityModifyRequest {
  string  Name = 1;
  string  Description = 2;
  string  KeyId = 3;
  bool    ModifyKeyExpiration = 4;
  uint64  ExpiresInUnixTimestamp = 5;
}

message EntityRemoveRequest {
  string KeyId = 1;
}

message GenerateEntityRequest {
  string  Name = 1;
  string  Description = 2;
  string  Algorithm = 3;
  uint64  ExpiresInUnixTimestamp = 4;
}

// KEYS
message GetKeysResponse {
  repeated Entity Entities = 1;
}

message GetKeyNamesResponse {
  repeated string Keys = 1;
}

// KEYS: IMPORT
message KeyImportRequest {
  bytes   KeyGzip = 1;
  string  KeyId = 2;
  bool    Force = 3;
}

message KeyImportResponse {}

// KEYS: EXPORT
message KeyExportRequest {
  string  KeyId = 1;
}

message KeyExportResponse {
  bytes   KeyGzip = 1;
  string  KeyId = 2;
}

// PATHS
message ListPathContentRequest {
  string Path = 1;
  bool Recursive = 2;
}

message ContentType {
  string Name = 1;
  string Path = 2;
  uint64 SizeInBytes = 3;
  uint64 CreatedUnixTimestamp = 4;
  uint64 ModifiedUnixTimestamp = 5;
}

message PathResponse {
  repeated ContentType Content = 1;
}

// BACKUPS
message BackupEntry {
  string      FileName = 1;
  uint64      CreatedUnixTimestamp = 2;
  uint64      ExpiresInUnixTimestamp = 3;
}

message BackupEntries {
  repeated BackupEntry Backups = 1;
}

message BackupManagerStatus {
  bool    IsEnabled = 1;
  uint64  LastBackupUnixTimestamp = 2;
  uint64  TotalBackups = 3;
  uint64  RetentionPeriod = 4;
  uint64  BackupFrequency = 5;
}

message BackupEntryRequest {
  string BackupFileName = 1;
}

message ExportedBackupResponse {
  string      FileName = 1;
  uint64      CreatedUnixTimestamp = 2;
  bytes       FileData = 3;
}

message ImportBackupRequest {
  string      FileName = 1;
  bytes       FileData = 2;
}

message RestoreFromBackupRequest {
  string      FileName = 1;
}

// MISC
message EmptyMessage {}

// MISC: Server Version
message ServerVersionRequest {}
message ServerVersionResponse {
  string Version = 1;
}